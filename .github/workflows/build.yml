name: Build Packages

on:
  push:
    branches:
      - Automation-Test

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyside6 pyinstaller

    - name: Install Inno Setup
      run: |
        choco install innosetup -y

    - name: Build with PyInstaller
      run: |
        pyinstaller --onedir --windowed main.py --add-data "./Interface/icon.ico:Interface" --icon "./Interface/icon.ico"

    - name: Create installer with Inno Setup
      run: |
        iscc /DMyAppVersion=${{ github.ref_name }} installermaker.iss

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Installer
        path: "dist/*.exe"
        if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dh-make debhelper build-essential

    - name: Install Python dependencies
      run: |
        pip install pyside6 pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed main.py --add-data "./Interface/icon.ico:Interface" --icon "./Interface/icon.ico"

    - name: Prepare deb package structure
      run: |
        mkdir -p package/usr/bin
        mkdir -p package/usr/share/app
        cp dist/main package/usr/bin/
        cp -r Interface/icon.ico package/usr/share/app/

    - name: Get current date
      id: get-date
      run: |
        echo "version=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT>> $GITHUB_OUTPUT

    - name: Create DEBIAN control file
      run: |
        mkdir -p package/DEBIAN
        echo "Package: DistGenerator4OI" > package/DEBIAN/control
        echo "Version: ${{ steps.get-date.outputs.version }}" >> package/DEBIAN/control
        echo "Section: base" >> package/DEBIAN/control
        echo "Priority: optional" >> package/DEBIAN/control
        echo "Architecture: amd64" >> package/DEBIAN/control
        echo "Maintainer: CarvingAn <hym608@outlook.com>" >> package/DEBIAN/control
        echo "Description: A simple and easy dictionary generator. Design for OI. " >> package/DEBIAN/control


    - name: Build deb package
      run: |
        dpkg-deb --build package
        mv package.deb DictGenerator4OI_${{ steps.get-date.outputs.version }}_amd64.deb

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Package
        path: '*.deb'
        if-no-files-found: error
